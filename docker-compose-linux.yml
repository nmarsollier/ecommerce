# Este es un compose que trae desde github el Dockerfile, compila y crea la imagen.
# Util para devs porque estamos haciendo build directamente desde el codigo fuente de github.
# la version linux nos crea una interfaz de red host.docker.internal apuntando a la ip de docker0
version: "3"
services:
    rabbitmq:
        container_name: ec-rabbitmq
        ports:
            - "15672:15672"
            - "5672:5672"
        image: "rabbitmq:3.8.3-management"
    mongo:
        container_name: ec-mongo
        ports:
            - "27017:27017"
        image: "mongo:4.0.18-xenial"
    redis:
        container_name: ec-redis
        ports:
            - "6379:6379"
        image: "redis:5.0.9-buster"
    prod-auth-go:
        build:
            context: https://raw.githubusercontent.com/nmarsollier/authgo/master/Dockerfile.prod
        container_name: prod-auth-go
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
        ports:
            - '3000:3000'
        image: prod-auth-go
        depends_on:
            - "rabbitmq"
            - "mongo"
    prod-image-go:
        container_name: prod-image-go
        build:
            context: https://raw.githubusercontent.com/nmarsollier/imagego/master/Dockerfile.prod
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
        ports:
            - '3001:3001'
        image: prod-image-go
        depends_on:
            - "rabbitmq"
            - "redis"
    prod-catalog-java:
        container_name: prod-catalog-java
        build:
            context: https://raw.githubusercontent.com/nmarsollier/ecommerce_catalog_java/master/Dockerfile.prod
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
        ports:
            - '3002:3002'
        image: prod-catalog-java
        depends_on:
            - "rabbitmq"
            - "mongo"
    prod-cart-node:
        container_name: prod-cart-node
        build:
            context: https://raw.githubusercontent.com/nmarsollier/ecommerce_cart_node/master/Dockerfile.prod
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
        ports:
            - '3003:3003'
        image: prod-cart-node
        depends_on:
            - "rabbitmq"
            - "mongo"
    prod-order-java:
        container_name: prod-order-java
        build:
            context: https://raw.githubusercontent.com/nmarsollier/ecommerce_order_java/master/Dockerfile.prod
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
        ports:
            - '3004:3004'
        image: prod-order-java
        depends_on:
            - "rabbitmq"
            - "mongo"
    prod-api-cli:
        container_name: prod-api-cli
        build:
            context: https://raw.githubusercontent.com/nmarsollier/ecommerce_api_client_react/master/Dockerfile.prod
        extra_hosts:
            - "host.docker.internal:172.17.0.1"
        ports:
            - '4200:80'
        image: prod-api-cli
        stdin_open: true
        depends_on:
            - "prod-order-java"
            - "prod-cart-node"
            - "prod-catalog-java"
            - "prod-image-go"
            - "prod-auth-go"

networks:
    default:
        driver: bridge